% this function runs the reaction ... Mac versionfunction[AllTimes] = MovieRTTimeclose all           % closes any open matlab figure windows: just a bit of house-keeping% change this bit to change where the data files are heldDataFilesFolder = ['Macintosh HD:Desktop Folder:PsychToolbox:RVIPFiles:RVIPData'];% change this bit to change where the movie files are heldClipsFolder = ['Macintosh HD:Desktop Folder:Experiments:Library Ex5:Andy'];% these bits define the default values for the parameters which are under% user-controlNumClips=42;             % Number of clips being shownHotClips = [20 42];     % Which clips are 'hot'NumQuestionsAsked = 5;  % how many questions to ask in the loaded testRandomQus = 0;          % Whether or not questions are asked in a random order: 1= random, 0 = non-random;QuestionOrder = [1:NumQuestionsAsked];  % if questions not random, order that questions are asked in.                                        % Here it is set as sequential ie [1, 2, .. NumQuestionsAsked]StartGap = 1;           % time (in secs) between movie and questions                                       LengthQus = 8;          % time (in secs) for questions to be asked for memory testEndGap = 5;          % time (in secs) between end of questions and next movie                                       ReactThresh = 0.1;     % Reaction threshold in seconds: reactions within this time are discounted% This bit opens a window and references it as 'window'. All functions% which draw/show stuff will reference 'window' when telling functions% where to draw or showscreenNumber = 0;       [DrawingWin,screenRect] = SCREEN(screenNumber,'OpenWindow',WhiteIndex(0));% these bits define the colours matlab uses to draw with the SCREEN% function. Not to be worried aboutwhite=WhiteIndex(DrawingWin);black=BlackIndex(DrawingWin);gray=GrayIndex(DrawingWin,0.5);% Set up some text for user interface. SCREEN(DrawingWin,'TextFont','Times New Roman');    % Change this bit if you don't like the fontSCREEN(DrawingWin,'TextSize',24);   % Change this bit if you don't like the font sizeCarryOn=1;        % this is an internal flag which says whether to go round the main while loop or not  AllYes=[];AllNos=[];AllMids=[];AllTimes=[];WaitSecs(0.01);while(CarryOn==1)       % while CarryOn = 1, the program carry's on going round the while loop     HideCursor;         % this command hides the cursor        % the following write black text at the positions indicated    SCREEN(DrawingWin,'DrawText','1. Run test 1',300,250,black);    SCREEN(DrawingWin,'DrawText','2. Run test 2',300,300,black);    SCREEN(DrawingWin,'DrawText','3. Change parameters',300,350,black);    SCREEN(DrawingWin,'DrawText','4. Quit',300,400,black);        % This asks for a number, stores it, then deletes the question     number = GetEchoNumber(DrawingWin,'Enter a number (followed by Enter or Return):',300,450,black,white);    Screen(DrawingWin,'FillRect',white);	% this fills the screen with white so that the text is deleted        if((number ==1)|(number==2))          % if 1 has been entered run the test with memory load                % this asks for and stores a filename for the data file        fstr = GetEchoString(DrawingWin,'Enter filename:',300,400,black,white);        OutFile=[fstr  '.dat'];                   SubjectData(1) = GetEchoNumber(DrawingWin,'Enter subject number:',300,400,black,white);        SubjectData(2) = GetEchoNumber(DrawingWin,'Enter subject''s age:',300,400,black,white);        SubjectData(3) = GetEchoNumber(DrawingWin,'Enter NART score:',300,400,black,white);        SubjectData(4) = GetEchoNumber(DrawingWin,'Enter memory test score:',300,400,black,white);        SubjectData(5) = GetEchoNumber(DrawingWin,'Enter subject''s gender (0 = male, 1 = female):',300,400,black,white);                % this is the memory load. It = 1 if test 1 selected as it is the        % one with memory load, 0 if test 2 selected        if(number==1) SubjectData(6) = 1;          else SubjectData(6) = 2;        end                SubjectData(7) = GetEchoNumber(DrawingWin,'Enter familiarity (0 = familiar, 1 = unfamiliar):',300,400,black,white);                % more text written        SCREEN(DrawingWin,'DrawText','Press button box to start the test',400,50,black);        port=psychserial('open', '.Bin', '.BOut', 19200);        a = psychserial('read', port, 0.001);        while(~isempty(a))            a= psychserial('read', port, 0.001);        end        while(isempty(a))            a= psychserial('read', port, 0.001);        end         psychserial('close', port);	        WaitSecs(0.001);    % just so function is in memory		randperm(10);		% same as		Screen(DrawingWin,'FillRect',white);		ts(1)=getsecs;				cd(ClipsFolder);        for ClipNum=1:NumClips            %			Screen(DrawingWin,'FillRect',gray);			            if(ismember(ClipNum,HotClips))            	filename = ['Macintosh HD:Desktop Folder:Experiments:Library Ex5:Andy:Clip' int2str(ClipNum) 'TARGET.mov'];            else            	filename = ['Macintosh HD:Desktop Folder:Experiments:Library Ex5:Andy:Clip' int2str(ClipNum) '.mov'];            end					isfile(filename)            % show the movie%            movie=Showtime('GetFromFile',filename);%            Showtime('LoadIntoRam',movie);            [yes,nos,mids,StartT,ttimes]=RunMovieTest2(DrawingWin,filename,StartGap,EndGap,getsecs,ReactThresh);            AllYes=[AllYes -1 yes-StartT];            AllNos=[AllNos -1 nos-StartT];			TargetTimes(ClipNum,:)=ttimes;			if(isempty(mids)) AllMids=[AllMids -1];			elseif(mids(1)-StartT<ReactThresh) AllMids=[AllMids -1];			else AllMids=[AllMids mids(1)-StartT];			end		%	AllMids            MovieStarts(ClipNum)=StartT            ts(ClipNum+1)=getsecs;%            Showtime('Dispose',movie);%            ts2(ClipNum)=getsecs;                        if(RandomQus) QuestionOrder=randperm(NumQuestionsAsked); end;            if(number==1) r=MemoryTest(QuestionOrder,LengthQus,DrawingWin);            else                 r = ones(1,5)*-1;%                t=getsecs;%                while((getsecs-t)<LengthQus) end;				WaitSecs(LengthQus);				end            Recalled(ClipNum,:)=r;        end				AllYes=[AllYes -1];		AllNos=[AllNos -1];%        LoadTimes=ts-ts(1)%        DisposedTimes=ts2-ts(1)        SCREEN(DrawingWin,'TextSize',24);        Ask(DrawingWin,'Finished! Call tester',black,white,'GetNumber');        HideCursor;        				cd(DataFilesFolder)    % change to folder containing data files        OutputData(AllYes,AllNos,AllMids,MovieStarts,Recalled,SubjectData,OutFile,ReactThresh,HotClips,TargetTimes);                    elseif(number == 3)     % if 2 entered change parameters        ChangeParams = 1;    % this controls whether parameters are changed or not        while(ChangeParams)  % use a while loop to change parameters so that they can be re-entered etc            % print current parameters            SCREEN(DrawingWin,'DrawText','Current parameters are:',300,200,black);              SCREEN(DrawingWin,'DrawText',['1. Number of clips shown = ' int2str(NumClips)],300,250,black);            SCREEN(DrawingWin,'DrawText',['2. Hot clips are numbers ' int2str(HotClips)],300,300,black);            SCREEN(DrawingWin,'DrawText',['3. Number of questions asked = ' int2str(NumQuestionsAsked)],300,350,black);            % see if questions asked randomly or not            if(RandomQus) SCREEN(DrawingWin,'DrawText',['4. Questions asked in a random order'],300,400,black);              else SCREEN(DrawingWin,'DrawText',['4. Order of questions fixed. Order is:' int2str(QuestionOrder)],300,400,black);             end					SCREEN(DrawingWin,'DrawText',['5. Length of reaction latency = ' num2str(ReactThresh)],300,450,black);            % ask which parameter to change and then change it            % ****WARNING*** I haven't checked to ensure all parameters are sensible so             % if a strange parameter is entered it may the program may crash            ParamToChange = GetEchoNumber(DrawingWin,'Enter number of parameter to change. Enter 0 to quit',300,550,black,white);                        if(ParamToChange==1)  % Change number of clips. Keeps asking for number till its > 0                NumClips=0;                while(NumClips<=0) NumClips = GetEchoNumber(DrawingWin,'Enter number of clips to show (>0)',300,550,black,white); end;                            elseif(ParamToChange==2)  % Change the 'hot' clips                HotClips = GetEchoNumber(DrawingWin,'Enter the number of the hot clips separated by a space',300,550,black,white);                             elseif(ParamToChange==3)  % Change number of questions. Keeps asking for number till its > 0                NumQuestionsAsked=0;                while(NumQuestionsAsked<=0) NumQuestionsAsked = min(5,GetEchoNumber(DrawingWin,'Enter number of questions to ask (1-5)',300,550,black,white)); end;                            elseif(ParamToChange==4)  % Change randomness or not of question order                YesStr = GetEchoString(DrawingWin,'Questions asked in random order? (y/n)',300,550,black,white);                if((YesStr=='y')|(YesStr=='Y')) RandomQus = 1;                else                  % if order fixed, enter question order. Will continue to ask until order is number of questions long                    RandomQus = 0;                    QuestionOrder=[];                    while(length(QuestionOrder)~=NumQuestionsAsked)                        QuestionOrder = GetEchoNumber(DrawingWin,'Enter the order of questions (1-5) separated by a space',300,550,black,white)                    end;                    % Make sure the order of questions is between 1 and 5                     QuestionOrder=min(5,max(1,QuestionOrder))                    s=['4. Order of questions fixed. Order is:' int2str(QuestionOrder)]                end            elseif(ParamToChange==5)  % Change reaction latency. Keeps asking till its > 0                ReactThresh=-1;                while(ReactThresh<0) ReactThresh = min(5,GetEchoNumber(DrawingWin,'Enter length of reaction latency (s)',300,550,black,white)); end;                                          elseif(ParamToChange==0)  % Quit change parameters                ChangeParams=0;            end            Screen(DrawingWin,'FillRect',white);	%  fills the screen with white so text is deleted                  end    else            % if any number other than 1 or 2 selected        CarryOn=0;  % CarryOn is set to 0 and we exit the while loop     endendShowCursor;                   % Show the cursor and SCREEN(DrawingWin,'Close');       % close the screen% if(go)% 	h=subplot(1,3,1);bar(DOut(:,2)),title('Hits'),xlabel('Minutes'),axis tight,set(h,'YLim',[0 NumPatterns])% 	h=subplot(1,3,2);bar(DOut(:,3)),title('Misses'),xlabel('Minutes'),axis tight% 	Maxmiss = max(max(DOut(:,3)),NumPatterns); % 	set(h,'YLim',[0 Maxmiss]);% 	subplot(1,3,3),errorbar(DOut(:,4),DOut(:,5)),title('Mean Reaction Times'),xlabel('Minutes'),axis tight% 	DOut% end% Function which actually runs the movie and does the rttest etcfunction[yes,nos,mids,prems] = RunMovieTest(DrawingWin,filename)%,movie)port=psychserial('open', '.Bin', '.BOut', 19200);% show the moviemovie=Showtime('GetFromFile',filename);Showtime('LoadIntoRam',movie);Showtime('Window',movie,DrawingWin);a= psychserial('read', port, 0.001);while(~isempty(a))    a= psychserial('read', port, 0.001);endprems=[];%frate=showtime('Rate',movie);tbetweenframes=0.04;%1/frate;nos=[];yes=[];mids=[];tstart=getsecsfor i=1:250     prems=[prems getsecs];    t=getsecs;    Showtime('MovieFrameDisplay',movie,i);    while((getsecs-t)<tbetweenframes)         a = uint8(psychserial('read', port,0.0001));        if(~isempty(a))		            if(a(1)==4)                yes=[yes getsecs];            elseif(a(1)==1)                nos=[nos getsecs];            elseif(a(1)==2)                mids=[mids getsecs];            end        end    endendtend=getsecs;psychserial('close', port);Showtime('Dispose',movie);yes-prems(1)noos=nos-prems(1)midl=mids-prems(1)tlen=tend-prems(1)% Function which actually runs the movie and does the rttest etcfunction[yes,nos,mids,TStart,TargetTimes] = RunMovieTest2(DrawingWin,filename,StartGap,EndGap,tnow,ReactThresh)ts=getsecs;white=WhiteIndex(DrawingWin);black=BlackIndex(DrawingWin);port=psychserial('open', '.Bin', '.BOut', 19200);SCREEN(DrawingWin,'TextSize',36);SCREEN(DrawingWin,'TextFont','Times New Roman');SCREEN(DrawingWin,'DrawText',['Get ready for next movie'],300,300,black);% show the moviemovie=Showtime('GetFromFile',filename);Showtime('LoadIntoRam',movie);Showtime('Window',movie,DrawingWin);a= psychserial('read', port, 0.001);while(~isempty(a))    a= psychserial('read', port, 0.001);endprems=[];%frate=showtime('Rate',movie);tbetweenframes=0.04;%1/frate;nos=[];yes=[];mids=[];if((getsecs-tnow)<EndGap) 	WaitSecs(EndGap-getsecs+tnow);end;Screen(DrawingWin,'FillRect',white);TStart=getsecs;%t=TStart;for i=1:250 %        t=getsecs;    Showtime('MovieFrameDisplay',movie,i);    prems=[prems getsecs];	while((getsecs-t)<tbetweenframes)         a = uint8(psychserial('read', port,0.0001));        if(~isempty(a))            if(sum(a)==4)                 yes=[yes getsecs];            elseif(sum(a)==1)                 nos=[nos getsecs];            end            if(sum(a)==2)                 mids=[mids getsecs];            end        end    end	%t=t+tbetweenframes;endtend=getsecs;Screen(DrawingWin,'FillRect',white);	%  fills the screen with white so text is deleted          while((getsecs-tend)<ReactThresh)    a = uint8(psychserial('read', port,0.0001));    if(~isempty(a))        if(sum(a)==4)             yes=[yes getsecs];        elseif(sum(a)==1)             nos=[nos getsecs];        end        if(sum(a)==2)             mids=[mids getsecs];        end    endend;Showtime('Dispose',movie);psychserial('close', port);if((getsecs-tend)<StartGap)	WaitSecs(StartGap-getsecs+tend);end;%yes-prems(1);%noos=nos-prems(1);%midl=mids-prems(1);%tlen=tend-prems(1);tlenall=getsecs-TStart%Mstart=prems-TStart;TStart=prems(1);TargetTimes=prems([1:50:201])-TStart% Function which actually runs the movie and does the rttest etcfunction[Recalled] =  MemoryTest(QuestionOrder,LengthQus,DrawingWin)white=WhiteIndex(DrawingWin);black=BlackIndex(DrawingWin);SCREEN(DrawingWin,'TextSize',36);SCREEN(DrawingWin,'TextFont','Times New Roman');port=psychserial('open', '.Bin', '.BOut', 19200);a=psychserial('read', port, 0.001);while(~isempty(a))    a= psychserial('read', port, 0.001);end% TQus=ones(1,5)*-1;% nos=ones(1,5)*-1;Recalled=ones(1,5)*-1;t=getsecs;for i=1:length(QuestionOrder)     SCREEN(DrawingWin,'DrawText',['Was object ' int2str(QuestionOrder(i)) ' wood? (Yes/No)'],300,300,black);    %TQus(i)=getsecs;    while((getsecs-t)<LengthQus)         a = uint8(psychserial('read', port,0.0001));        if(~isempty(a))            if(sum(a)==4)                 Recalled(QuestionOrder(i))=1;                break;            elseif(sum(a)==1)                 Recalled(QuestionOrder(i))=0;                break;            end        end    end    Screen(DrawingWin,'FillRect',white);	%  fills the screen with white so text is deleted              if((getsecs-t)>LengthQus); break; end;    endpsychserial('close', port);if((getsecs-t)<LengthQus)	WaitSecs(LengthQus-getsecs+t) end;%LengthMemTest=getsecs-t% yess=yes-TQus% noos=nos-TQusfunction OutputData(Yeses,Nos,PCopyPress,MovieStarts,Recalled,SubjectData,OutFile,ReactThresh,HotClips,TargetTimes)%TargetStarts = [0:2:8] + ReactThresh;YesInds=find(Yeses==-1);NoInds=find(Nos==-1);cb=load('Macintosh HD:Desktop Folder:Experiments:Library Ex5:Andy:ClipBreakDowns.dat','-ascii');h=load('Macintosh HD:Desktop Folder:Experiments:Library Ex5:Andy:HotCold.dat','-ascii');ClipBreakdowns=cb(1:length(MovieStarts),:);HotCold=h(1:length(MovieStarts));HotInds=find(HotCold==1);ColdInds=find(HotCold==0);YesOut=ones(size(ClipBreakdowns))*-1;NoOut=ones(size(ClipBreakdowns))*-1;CorrectOuts=ones(size(ClipBreakdowns))*-1;pcopyright=0;pcopywrong=0;pcopyhot=0;pcopycold=0;for i=1:length(MovieStarts)    TargetStarts = TargetTimes(i,:);	YesTimes=Yeses(YesInds(i)+1:YesInds(i+1)-1);        NoTimes=Nos(NoInds(i)+1:NoInds(i+1)-1);     NumRecalled(i)=0;    for j=1:5        ys=YesTimes - TargetStarts(j);        inds=find((ys>ReactThresh)&(ys<=(2+ReactThresh)));        YesNo=-1;        if(~isempty(inds))            YesOut(i,j) = ys(inds(1));            YesNo=1;            if(ClipBreakdowns(i,j)==1) CorrectOuts(i,j) = 1;            else CorrectOuts(i,j) = 0;            end                    end                ns=NoTimes - TargetStarts(j);        inds=find((ns>ReactThresh)&(ns<=(2+ReactThresh)));        if(~isempty(inds))            NoOut(i,j) = ns(inds(1));            YesNo=0;            if(ClipBreakdowns(i,j)==0) CorrectOuts(i,j) = 1;            else CorrectOuts(i,j) = 0;            end        end                if((YesOut(i,j)>0)&(NoOut(i,j)>0))            if(YesOut(i,j)<NoOut(i,j))                 NoOut(i,j)=-1;                YesNo=1;                if(ClipBreakdowns(i,j)==1) CorrectOuts(i,j) = 1;                else CorrectOuts(i,j) = 0;                end            else                YesOut(i,j)=-1;                YesNo = 0;                if(ClipBreakdowns(i,j)==0) CorrectOuts(i,j) = 1;                else CorrectOuts(i,j) = 0;                end           end       end              if((Recalled(i,j)>=0)&(YesNo==Recalled(i,j))) NumRecalled(i)=NumRecalled(i)+1; end;    end    OldStartY=YesInds(i);    OldStartN=NoInds(i);	if(ismember(i,HotClips))		if(PCopyPress(i)>0)			pcopyright=pcopyright+1;		end	else		if(PCopyPress(i)>0)			pcopywrong=pcopywrong+1;			if(HotCold(i)==1) pcopyhot = pcopyhot+1;			else pcopycold = pcopycold+1;			end		end	end	endAllRts=max(YesOut,NoOut);rthot=[]; rtcold=[]; rttarget=[];for i=HotInds rthot=[rthot AllRts(i,:)]; endfor i=ColdInds rtcold=[rtcold AllRts(i,:)]; endTargetInds=intersect(HotClips,1:length(MovieStarts));for i=TargetInds rttarget=[rttarget AllRts(i,:)]; endrtall=[rthot rttarget rtcold];if(isempty(rthot)) 	MeanRTHot = -1;	MedianRTHot = -1;else	MeanRTHot = mean(rthot(find(rthot>0)));	MedianRTHot = median(rthot(find(rthot>0)));endif(isempty(rtcold)) 	MeanRTCold = -1;	MedianRTCold = -1;else	MeanRTCold = mean(rtcold(find(rtcold>0)));	MedianRTCold = median(rtcold(find(rtcold>0)));endif(isempty(rttarget)) 	MeanRTTarget = -1;	MedianRTTarget = -1;else	MeanRTTarget = mean(rttarget(find(rttarget>0)));	MedianRTTarget = median(rttarget(find(rttarget>0)));endif(isempty(rtall)) 	MeanRTAll = -1;	MedianRTAll = -1;else	MeanRTAll = mean(rtall(find(rtall>0)));	MedianRTAll = median(rtall(find(rtall>0)));endCs=CorrectOuts.*(CorrectOuts>=0);MeanObjectAll = mean(sum(Cs,2));if(~isempty(HotInds)) MeanObjectHot = mean(sum(Cs(HotInds,:),2));else MeanObjectHot = -1;endif(~isempty(ColdInds)) MeanObjectCold = mean(sum(Cs(ColdInds,:),2));else MeanObjectCold = -1;endif(~isempty(TargetInds)) MeanObjectTarget = mean(sum(Cs(TargetInds,:),2));else MeanObjectTarget = -1;endMeanRecallAll = mean(NumRecalled);MeanRecallHot = mean(NumRecalled(HotInds));MeanRecallCold = mean(NumRecalled(ColdInds));MeanRecallTarget = mean(NumRecalled(TargetInds));fid=fopen(OutFile,'a');for i=1:length(SubjectData) fprintf(fid,'%d \t ',SubjectData(i)); end;fprintf(fid,'%1.4f \t %1.4f \t %1.4f \t %1.4f \t ',MeanRTCold, MeanRTHot, MeanRTTarget, MeanRTAll);fprintf(fid,'%1.4f \t %1.4f \t %1.4f \t %1.4f \t ',MedianRTCold, MedianRTHot, MedianRTTarget, MedianRTAll);fprintf(fid,'%1.4f \t %1.4f \t %1.4f \t %1.4f \t ',MeanObjectCold, MeanObjectHot, MeanObjectTarget, MeanObjectAll);fprintf(fid,'%1.4f \t %1.4f \t %1.4f \t %1.4f \t ',MeanRecallCold, MeanRecallHot, MeanRecallTarget, MeanRecallAll);fprintf(fid,'%d \t %d \t %d \t %d \t', pcopywrong,pcopycold,pcopyhot,pcopyright);for i=1:length(MovieStarts)    for j=1:5        if(AllRts(i,j)>=0) fprintf(fid,'%f \t ',AllRts(i,j));        else fprintf(fid,'N \t ');        end    end    for j=1:5        if(CorrectOuts(i,j)>=0) fprintf(fid,'%f \t ',CorrectOuts(i,j));        else fprintf(fid,'N \t ');        end    end	fprintf(fid,'%d \t',NumRecalled(i));endfor i=1:length(MovieStarts)    if(PCopyPress(i)>0) fprintf(fid,'%f \t ',PCopyPress(i));    else fprintf(fid,'N \t ');    endendfprintf(fid,'\n'); fclose(fid);