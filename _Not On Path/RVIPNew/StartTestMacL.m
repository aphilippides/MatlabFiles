% This function runs the reaction, Mac version, input from Button box(es)% Run the program by % Default values% % Full instructions in RVIP summary document (RVIP_Summary.doc)% do not change the bits labelled **** DO NOT CHANGE ******% unless you know what you're doing% Copyright Andrew Philippides 2004. % Do not re-distribute without consent of Jenny Rustedfunction StartTestMac%%%%%%%% Start of Preamble section %%%%%%%%%%%%%%%%% See RVIP Summary document %%%%%%%%%% closes any open matlab figure windows: just a bit of house-keepingclose all% change this bit to change where the data files goDataFileFolder = 'Desktop:RVIPFiles:RVIPData';% Check if DataFileFolder is a folder, if so, put files there, if not, put% files in the current directoryif(isdir(DataFileFolder)) cd(DataFileFolder); end;% Define some default parameters for the testSequenceLen=80;    % this is the amount of numbers shown per trial/'minute' NumPatterns=8;     % this is the number of correct sequences per trialNumMinutes=6;      % this is the number of trials per participantLincBox=1;         % this says whether to use Linc button box as the default input device%%%%%%%%% The next 15 lines are Window/Text drawing %%%%%%%%%%%%%%%%%%%%% They consist of PsychToolbox functions    %%%%%%%%%%%% % This bit opens a window and references it as 'window'. All functions% which draw/show stuff will reference 'window' when telling functions% where to draw or what to show[window,screenRect] = SCREEN(0,'OpenWindow',WhiteIndex(0));% these bits define the colours matlab uses to draw with the SCREEN% function. Not to be worried aboutwhite=WhiteIndex(window);black=BlackIndex(window);HideCursor;         % This hides the cursorSCREEN(window,'TextFont','Times New Roman');    % Change this bit if you don't like the fontSCREEN(window,'TextSize',24);   % Change this bit if you don't like the font size% The next 4 lines set some internal parameters which make the program% enter loops correctly% **** DO NOT CHANGE ******fstr='NonePicked';      % a string for filename for the subject number=0;               % variable for the main menu option selected go=0;                   % flag to say whether to end program or notCarryOn=1;              % flag to make program entermain while loop% while CarryOn = 1, the program carry's on going round the while loop while(CarryOn==1)        %%%%%%%%% The next 15 lines are Window/Text drawing %%%%%%%%%%%%    % It writes the main menu text in black at positions indicated    % If you want to change text or position change the relevant bits    % do help SCREEN or see summary document for details     SCREEN(window,'DrawText','1. Show demo',300,200,black);    SCREEN(window,'DrawText','2. Run the test',300,250,black);    SCREEN(window,'DrawText','3. Show results and quit',300,300,black);        % this bit displays which button box is used     if(LincBox) SCREEN(window,'DrawText','4. Change entry method. Currently using Linc Box',300,350,black);    else SCREEN(window,'DrawText','4. Change entry method. Currently using CMU Box',300,350,black);    end    SCREEN(window,'DrawText','5. Change parameters',300,400,black);    SCREEN(window,'DrawText','6. Quit',300,450,black);        % This waits for a number to be entered, indicating the menu choice    number = GetEchoNumber(window,'Enter a number (followed by Enter or Return):',300,450,black,white);        Screen(window,'FillRect',white);	% this fills the screen with white so that the text is deleted        %%%%%%%%% The next 5 lines run the demo program %%%%%%%%%%%%        if(number ==1)          % if 1 is selected, run the RVIP demo         RTDemo(window);     % Run the rvip demo function        SCREEN(window,'TextSize',24);   % reset the text size and wait for user entry before continuing         Ask(window,'Finished! Hit enter or return to proceed',black,white,'GetNumber');    elseif(number == 2)     % if 2 is selected run the main RVIP function            %%%%%%%%% The next 6 lines get subject data %%%%%%%%%%%%    %%%%%%%%% this is used as filenames where %%%%%%%%%%%%    %%%%%%%%%  the data will be output to     %%%%%%%%%%%%        % OutFile is the file where data for multiple subjects are stored        % fname is the file where data for the individual subject is stored         fstr = GetEchoString(window,'Enter filename:',300,400,black,white);        OutFile=[fstr  '.dat'];           fstr = GetEchoString(window,'Enter subject ID:',300,400,black,white);        TNumStr = GetEchoString(window,'Enter test number:',300,400,black,white);        SubjID = [fstr TNumStr]        fname=[SubjID '.dat'];                   % the next 4 lines check if fname has already been used as a        % subject name and if so prompts for re-entry        while(IsFile(fname))            fstr = GetEchoString(window,'Filename already used. Enter a new filename:',300,400,black,white);            TNumStr = GetEchoString(window,'Enter test number:',300,400,black,white);            fname=[fstr TNumStr '.dat']           end                  %%%%%%%%% The next line calls the function which %%%%%%%%%%%%  %%%%%%%%% generates random test data             %%%%%%%%%%%%        [RndSet,SeqBegs,SeqEnds] = GetRandomDataSet(NumMinutes,SequenceLen,NumPatterns);          %%%%%%%%% The next 6 lines calls the functions which %%%%%%%%%%%%  %%%%%%%%% run the RVIP experiments.             %%%%%%%%%%%%               % check which input device is being used then        % run the appropriate function        if(LincBox)             [ins,outs]=RTTest_LincsBox(window,RndSet);    % RVIP with entry from Linc's box        else            [ins,outs]=RTTest_CMU(window,RndSet);         % RVIP with entry from CMU box        end          %%%%%%%%% The next line calls the function which %%%%%%%%%%%%  %%%%%%%%% manipulates the data and writes it to files %%%%%%%%%%%%                DOut=WriteDataFile(outs,SeqEnds,ins,NumMinutes,fname,SequenceLen,NumPatterns,SubjID,OutFile);                % Reset text size and wait for user entry        SCREEN(window,'TextSize',24);        Ask(window,'Finished! Call tester',black,white,'GetNumber');        HideCursor;            elseif(number == 3)      % if 3 is selected, exit the main loop and show the data          [go,fns]=isfile([fstr '*.dat']);   % Check if any data files exist.         if(go)                             % If not, restart the test            CarryOn=0;                              else            Ask(window,'No results yet! Hit enter or return to proceed',black,white,'GetNumber');        end  %%%%%%%%% The next 30 lines perform parameter setting %%%%%%%%%%%%            elseif(number == 4)     % if 4 is selected, the user chooses which input devive to use        % Prompt for entry: if 1 is selected, use Linc's box.         % if 2 is selected, use CMU box        BoxNum = GetEchoNumber(window,'Enter 1 to use LincBox, 2 to use CMU Button Box',200,400,black,white);        if(BoxNum == 2)            LincBox=0;        else            LincBox = 1;        end            elseif(number == 5)     % if 5 is selected, run through the parameters and change them                % The next 10 lines prompt the user to change the test parameters        % They are written in while loops so that the program checks if        % valid values have been entered                SequenceLen=0;          % change the amount of numbers shown per trial        while(SequenceLen<=0)            SequenceLen = GetEchoNumber(window,'Enter the sequence length (>0) of the test (followed by Enter or Return):',200,400,black,white);        end        NumPatterns=-1;         % change the amount of correct patterns per trial        while((NumPatterns<0)|(NumPatterns>(SequenceLen/5)))            NumPatterns = GetEchoNumber(window,'Enter the number of patterns (>0) of the test (followed by Enter or Return):',200,400,black,white);        end           NumMinutes=0;          % change the number of trials         while(NumMinutes<=0)            NumMinutes = GetEchoNumber(window,'Enter the length (>0) of the test (followed by Enter or Return):',200,400,black,white);        end    else        % if 6 or another number is entered, exit the main loop        CarryOn=0;    endend% Close the screenShowCursor;SCREEN(window,'Close');% if a data file exists plot 3 graphs showing (respectively) the number of% correct responses per minute, the number of incorrect responses per% minute and the mean and standard deviation of reaction times if(go)    h=subplot(1,3,1);bar(DOut(:,2)),title('Hits'),xlabel('Minutes'),axis tight,set(h,'YLim',[0 NumPatterns])    h=subplot(1,3,2);bar(DOut(:,3)),title('Misses'),xlabel('Minutes'),axis tight    Maxmiss = max(max(DOut(:,3)),NumPatterns);     set(h,'YLim',[0 Maxmiss]);    subplot(1,3,3),errorbar(DOut(:,4),DOut(:,5)),title('Mean Reaction Times'),xlabel('Minutes'),axis tight    DOutend